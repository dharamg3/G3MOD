on early-init
    start ueventd

on init

sysclktz 0

loglevel 9

# setup the global environment
    export PATH /sbin:/system/sbin:/system/bin:/system/xbin
    export LD_LIBRARY_PATH /system/lib
    export ANDROID_BOOTLOGO 1
    export ANDROID_ROOT /system
    export ANDROID_ASSETS /system/app
    export ANDROID_DATA /data

    export EXTERNAL_STORAGE /sdcard
    export ASEC_MOUNTPOINT /mnt/asec

     export LOOP_MOUNTPOINT /mnt/obb
     export BOOTCLASSPATH /system/framework/core.jar:/system/framework/bouncycastle.jar:/system/framework/ext.jar:/system/framework/framework.jar:/system/framework/android.policy.jar:/system/framework/services.jar:/system/framework/core-junit.jar

    symlink /misc /etc
# Backward compatibility
    symlink /sys/kernel/debug /d

# create mountpoints
    mkdir /mnt 0775 root root
    mkdir /sdcard 0000 system system

# Create cgroup mount point for cpu accounting
    mkdir /acct
    mount cgroup none /acct cpuacct
    mkdir /acct/uid
    
    mkdir /tmp
    mount tmpfs nodev /tmp
    
    symlink /sdcard /mnt/sdcard
    
    insmod /lib/modules/fsr.ko
    insmod /lib/modules/fsr_stl.ko
    insmod /lib/modules/rfs_glue.ko
    insmod /lib/modules/rfs_fat.ko

    insmod /lib/modules/dpram.ko
    insmod /lib/modules/param.ko 

    mkdir /system
    mkdir /efs
    mkdir /data 0771 system system

    mkdir /cache 0777 system cache
    mkdir /config 0500 root root

    # Directory for putting things only root should see.
    mkdir /mnt/secure 0700 root root

    # Directory for staging bindmounts
    mkdir /mnt/secure/staging 0700 root root

    # Directory-target for where the secure container
    # imagefile directory will be bind-mounted
    mkdir /mnt/secure/asec  0700 root root

    # Secure container public mount points.
    mkdir /mnt/asec  0700 root system
    mount tmpfs tmpfs /mnt/asec mode=0755,gid=1000


# Create cgroup mount points for process groups
    mkdir /dev/cpuctl
    mount cgroup none /dev/cpuctl cpu
    chown system system /dev/cpuctl
    chown system system /dev/cpuctl/tasks
    chmod 0777 /dev/cpuctl/tasks
    write /dev/cpuctl/cpu.shares 1024

    mkdir /dev/cpuctl/fg_boost
    chown system system /dev/cpuctl/fg_boost/tasks
    chmod 0777 /dev/cpuctl/fg_boost/tasks
    write /dev/cpuctl/fg_boost/cpu.shares 1024

    mkdir /dev/cpuctl/bg_non_interactive
    chown system system /dev/cpuctl/bg_non_interactive/tasks
    chmod 0777 /dev/cpuctl/bg_non_interactive/tasks
    # 5.0 %
    write /dev/cpuctl/bg_non_interactive/cpu.shares 52

# Force the PDA mode. ICS handle very badly the usb_switch ...
    chown radio system /sys/devices/virtual/sec/switch/UsbMenuSel
    chown radio system /sys/devices/virtual/sec/switch//tethering
    chown radio system /sys/devices/virtual/sec/switch/uart_sel
    chown radio system /sys/devices/virtual/sec/switch/usb_sel
    chown radio system /sys/devices/virtual/sec/switch/usb_state
    write /sys/devices/virtual/sec/switch/usb_sel "PDA"

on fs
# mount mtd partitions
    g3_mount_stl6
    g3_mount_stl7
    g3_mount_stl8
    #mount rfs /dev/block/stl4 /efs nosuid nodev check=no
    #mount tmpfs tmpfs /tmp

on post-fs
# DATA
    exec apply_disk_policy
    chown system system /data
    chmod 0771 /data

# CACHE
    chown system cache /cache
    chmod 0777 /cache

    # This may have been created by the recovery system with odd permissions
    mkdir /cache/recovery
    chown system cache /cache/recovery
    chmod 0777 /cache/recovery
# EFS
    chown radio radio /efs
    chmod 0771 /efs

    chown radio system /efs
    chmod 0771 /efs

    exec apply_disk_policy

    write /proc/sys/kernel/panic_on_oops 1
    write /proc/sys/kernel/hung_task_timeout_secs 0
    write /proc/cpu/alignment 4
    write /proc/sys/kernel/sched_latency_ns 10000000
    write /proc/sys/kernel/sched_wakeup_granularity_ns 2000000
    write /proc/sys/kernel/sched_compat_yield 1
    write /proc/sys/kernel/sched_child_runs_first 0

on boot
# basic network init
    ifup lo
    hostname localhost
    domainname localdomain

# set RLIMIT_NICE to allow priorities from 19 to -20
    setrlimit 13 40 40

    class_start default

## Daemon processes to be run by init.
##
service ueventd /sbin/ueventd
    critical

service console /sbin/sh
    console
    disabled
    user shell
    group log

on property:ro.secure=0
    start console

service recovery /sbin/recovery

# adbd is controlled by the persist.service.adb.enable system property
service adbd /sbin/adbd

on property:persist.service.adb.enable=1
    start adbd

#on property:persist.service.adb.enable=0
#    stop adbd
